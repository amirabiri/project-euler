data = require 'euler/common/data'

exports.run_solution = (num, showTime)->
  solution = get_solution num

  data.setCurrentSolution num

  if solution.initialize?
    solution.initialize()

  start = process.hrtime()

  result = solution.solve()

  elapsed = elapsedMs start
  console.log result
  if showTime
    console.log elapsed

exports.benchmark_solution = (num, times)->
  solution = get_solution num

  data.setCurrentSolution num

  if solution.initialize?
    solution.initialize()

  start = process.hrtime()

  for i in [0..times]
    solution.solve()

  elapsed = elapsedMs start
  console.log elapsed

get_solution = (num)->
  try
    return require "euler/solutions/#{num}"
  catch e
    if e.code == 'MODULE_NOT_FOUND' && e.message.match("solutions/#{num}'")
      error = Error 'Solution not found'
      error.code = 'SOLUTION_NOT_FOUND'
      throw error
    else
      throw e

elapsedMs = (start)->
  elapsed = process.hrtime start
  (elapsed[0] * 1000 + elapsed[1] / 1000000).toFixed(0)
