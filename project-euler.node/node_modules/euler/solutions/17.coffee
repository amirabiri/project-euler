floor = Math.floor

number_words_map = [null, "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten",
                          "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"]

number10s_words_map = [null, null, "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"]

exports.solve = ->
  sum = 0
  for number in [1..1000]
    for word in number_words number
      sum += word.length
  return sum

number_words = (number)->
  if number < 20
    return [number_words_map[number]]

  if number < 100
    words = [number10s_words_map[floor(number / 10)]]
    if number % 10 != 0
      words.push number_words_map[number % 10]
    return words

  if number < 1000
    words = [number_words_map[floor(number / 100)], "hundred"]
    if number % 100 != 0
      words.push "and"
      for w in number_words(number % 100)
        words.push w
    return words

  return ["one", "thousand"]
